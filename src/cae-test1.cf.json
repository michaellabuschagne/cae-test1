{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "caeDynamoDb": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "enpoweredCae",
        "BillingMode": "PROVISIONED",
        "KeySchema": [
          {
            "AttributeName": "Type",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "Interval",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "Type",
            "AttributeType": "S"
          },
          {
            "AttributeName": "Interval",
            "AttributeType": "N"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "45"
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }
      }
    },
    "lambdaGenerateExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Description": "Role for Lambdas which generate and push data to Dynamo DB",
        "RoleName": "LambdaGenerateExecutionRole"
      }
    },
    "lambdaCustomerBillQueryExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Description": "Role for Lambdas which generate and push data to Dynamo DB",
        "RoleName": "LambdaCustomerBillQueryExecutionRole"
      }
    },
    "lambdaGenerateDataExecutionPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudwatch:*",
                "logs:*",
                "dynamodb:PutItem",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "caeDynamoDb",
                    "Arn"
                  ]
                },
                "arn:aws:cloudwatch:*:*:*",
                "arn:aws:logs:*:*:*",
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "lambdaArtifactsS3Bucket",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "PolicyName": "LambdaGenerateDataExecutionPolicy",
        "Roles": [
          "LambdaGenerateExecutionRole",
          "LambdaDDBStreamExecutionRole",
          "LambdaCustomerBillQueryExecutionRole"
        ]
      }
    },
    "lambdaArtifactsS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "BucketName": "cae-test1-deployment-artifacts-eu-west-1",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "Expire artifacts after 14 days",
              "Status": "Enabled",
              "ExpirationInDays": 14
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "generateCustomerDataLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cae-test1-deployment-artifacts-eu-west-1",
          "S3Key": "generateFakeCustomerUsage-v8.zip"
        },
        "Description": "Lambda Function which generated Customer Usage data and pushes it to DynamoDB",
        "FunctionName": "GenerateCustomerDataLambda",
        "Handler": "dist/handler.generateFakeCustomerData",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "lambdaGenerateExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30
      }
    },
    "generateEnergyDataLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cae-test1-deployment-artifacts-eu-west-1",
          "S3Key": "generateFakeEnergyPricing-v3.zip"
        },
        "Description": "Lambda Function which generated Energy Pricing data and pushes it to DynamoDB",
        "FunctionName": "GenerateEnergyDataLambda",
        "Handler": "dist/handler.generateFakeEnergyData",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "lambdaGenerateExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 3
      }
    },
    "generateCustomerDataCron": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Trigger the GenerateCustomerDataLambda and GenerateEnergyDataLambda every 5 minutes",
        "Name": "GenerateEnergyData-GenerateCustomerDataLambda-CRON",
        "ScheduleExpression": "rate(1 minute)",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "generateCustomerDataLambda",
                "Arn"
              ]
            },
            "Id": "generateCustomerDataLambda"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "generateEnergyDataLambda",
                "Arn"
              ]
            },
            "Id": "generateEnergyDataLambda"
          }
        ]
      }
    },
    "generateCustomerDataLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "generateCustomerDataLambda",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "generateCustomerDataCron",
            "Arn"
          ]
        }
      }
    },
    "generateEnergyDataLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "generateEnergyDataLambda",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "generateCustomerDataCron",
            "Arn"
          ]
        }
      }
    },
    "lambdaDDBStreamExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
        ],
        "Description": "Role for Lambda which handles DynamoDB stream data",
        "RoleName": "LambdaDDBStreamExecutionRole"
      }
    },
    "dynamoDbStreamHandlerLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cae-test1-deployment-artifacts-eu-west-1",
          "S3Key": "dynamoDbStreamHandler-v6.zip"
        },
        "Description": "Lambda Function which handle DynamoDB stream data and maitain hourly Customer Usage",
        "FunctionName": "DDBStreamCustomerDataHandlerLambda",
        "Handler": "dist/handler.rollUpCustomerUsageData",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "lambdaDDBStreamExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30
      }
    },
    "dynamoDbStreamCustomerUsageTrigger": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1000,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "caeDynamoDb",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "dynamoDbStreamHandlerLambda",
            "Arn"
          ]
        },
        "MaximumBatchingWindowInSeconds": 300,
        "ParallelizationFactor": 1,
        "StartingPosition": "LATEST"
      }
    },
    "apiGatewayDDBReadPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudwatch:*",
                "logs:*",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "caeDynamoDb",
                    "Arn"
                  ]
                },
                "arn:aws:cloudwatch:*:*:*",
                "arn:aws:logs:*:*:*"
              ]
            }
          ]
        },
        "PolicyName": "LambdaGenerateDataExecutionPolicy",
        "Roles": [
          "ApiGatewayCustomerDDBQueryRole"
        ]
      }
    },
    "apiGatewayCustomerDDBQueryRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Description": "Role for API Gateway to query Dynamo DB",
        "RoleName": "ApiGatewayCustomerDDBQueryRole"
      }
    },
    "queryCustomerBillLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cae-test1-deployment-artifacts-eu-west-1",
          "S3Key": "customerBillApi-v3.zip"
        },
        "Description": "Lambda Function which will query Customer Usage data from DynamoDB",
        "FunctionName": "QueryCustomerBillLambda",
        "Handler": "dist/handler.queryCustomerBill",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "lambdaCustomerBillQueryExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 60
      }
    }
  }
}